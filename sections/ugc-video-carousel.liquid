{% stylesheet %}
.ugc-video-carousel-background,
.shopify-section.ugc-video-carousel,
.ugc-full-bg {
  margin: 0 !important;
  padding: 0 !important;
  background-color: var(--ugc-background-color);
  width: 100vw;
  overflow-x: hidden;
}
  .ugc-full-bg {
  padding-top: var(--ugc-padding-top);
  padding-bottom: var(--ugc-padding-bottom);
}


.ugc-carousel-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 1280px;
  margin: 0 auto;
  padding: 0;
}

.ugc-carousel-title {
  text-align: center;
  margin-bottom: 30px;
  font-weight: 600;
}

.ugc-carousel-container {
  display: flex;
  gap: 20px;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  padding: 0 20px 10px 20px;
  justify-content: flex-start;
  scroll-padding-left: 20px;
}

.ugc-carousel-container::-webkit-scrollbar {
  display: none;
}

.ugc-carousel-item {
  flex: 0 0 auto;
  scroll-snap-align: start;
  width: calc(25% - 16px); /* Desktop : 4 vidéos */
  max-width: none;
  position: relative;
  border-radius: 12px;
  overflow: hidden;
  background-color: #000;
}

@media screen and (max-width: 767px) {
  .ugc-carousel-container {
    gap: 10px;
    padding-left: 10px;
    padding-right: 10px;
  }

  .ugc-carousel-item {
    width: 44%;
    max-width: 160px;
  }
}




.ugc-carousel-item video {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  background: #000;
}

.ugc-carousel-caption {
  padding: 8px;
  text-align: center;
  font-size: 14px;
  color: #333;
}

.ugc-carousel-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: white;
  border: 1px solid #ccc;
  border-radius: 50%;
  width: 36px;
  height: 36px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
}

.ugc-carousel-arrow-left {
  left: 10px;
}

.ugc-carousel-arrow-right {
  right: 10px;
}

.play-button-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 64px;
  height: 64px;
  transform: translate(-50%, -50%);
  background: rgba(255,255,255,0.8);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 5;
}

.play-button-overlay svg {
  width: 28px;
  height: 28px;
}

@media screen and (max-width: 1024px) {
  .ugc-carousel-item {
    width: calc(33.33% - 16px);
  }
}

@media screen and (max-width: 768px) {
  .ugc-carousel-arrow {
    display: none;
  }

  .ugc-carousel-item {
    width: calc(50% - 16px);
  }
}

@media screen and (max-width: 480px) {
  .ugc-carousel-item {
    width: 100%;
  }
}
{% endstylesheet %}

<style>
  .ugc-full-bg {
    --ugc-padding-top: {{ section.settings.padding_top }}px;
    --ugc-padding-bottom: {{ section.settings.padding_bottom }}px;
    --ugc-background-color: {{ section.settings.background_color }};
    --ugc-thumbnail-width: 300px;
  }
</style>

<div class="ugc-video-carousel-background">
  <div class="ugc-full-bg">
    {% if section.settings.title != blank %}
      <h2 class="ugc-carousel-title" style="color: {{ section.settings.title_color }}; font-size: {{ section.settings.title_size }}px;">
        {{ section.settings.title }}
      </h2>
    {% endif %}

    <div class="ugc-carousel-wrapper">
      {% if section.settings.show_arrows %}
        <button class="ugc-carousel-arrow ugc-carousel-arrow-left" onclick="ugcCarouselScroll('{{ section.id }}', 'left')" aria-label="Défiler vers la gauche">‹</button>
        <button class="ugc-carousel-arrow ugc-carousel-arrow-right" onclick="ugcCarouselScroll('{{ section.id }}', 'right')" aria-label="Défiler vers la droite">›</button>
      {% endif %}
      <div class="ugc-carousel-container" id="ugc-carousel-{{ section.id }}">
        {% for block in section.blocks %}
          <div class="ugc-carousel-item">
            <video preload="metadata" playsinline muted
  {% if block.settings.poster != blank %}
    poster="{{ block.settings.poster | image_url }}"
  {% endif %}
  id="video-{{ block.id }}">
  <source src="{{ block.settings.video_url }}" type="video/mp4">
</video>

            <div class="play-button-overlay" onclick="playUgcVideo('{{ block.id }}')">
              <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
                <circle cx="32" cy="32" r="30" fill="white" />
                <polygon points="26,20 26,44 46,32" fill="#000" />
              </svg>
            </div>
            {% if block.settings.caption != blank %}
              <div class="ugc-carousel-caption">{{ block.settings.caption }}</div>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  function ugcCarouselScroll(sectionId, direction) {
    const container = document.getElementById(`ugc-carousel-${sectionId}`);
    const scrollAmount = container.offsetWidth * 0.8;
    container.scrollBy({ left: direction === 'left' ? -scrollAmount : scrollAmount, behavior: 'smooth' });
  }

  function playUgcVideo(id) {
    const video = document.getElementById(`video-${id}`);
    const overlay = video.parentElement.querySelector('.play-button-overlay');
    video.muted = false;
    video.play();
    overlay.style.display = 'none';
    video.setAttribute('controls', 'controls');
    video.style.pointerEvents = 'auto';
  }
  document.addEventListener('DOMContentLoaded', () => {
  const videos = [{% for block in section.blocks %}document.getElementById("video-{{ block.id }}"){% unless forloop.last %}, {% endunless %}{% endfor %}];
  const overlays = [{% for block in section.blocks %}document.getElementById("video-{{ block.id }}").parentElement.querySelector('.play-button-overlay'){% unless forloop.last %}, {% endunless %}{% endfor %}];

  let index = 0;

  function playNextPreview(i) {
    if (i >= videos.length) return;

    const video = videos[i];
    const overlay = overlays[i];

    video.currentTime = 0;
    video.muted = true;
    overlay.style.display = 'none';

    video.play().then(() => {
      setTimeout(() => {
        video.pause();
        video.currentTime = 0;
        video.muted = false;
        overlay.style.display = '';
        playNextPreview(i + 1);
      }, 3000);
    }).catch(() => {
      // autoplay failed (e.g. Safari), skip to next
      playNextPreview(i + 1);
    });
  }

  playNextPreview(0);
});

</script>

{% schema %}
{
  "name": "UGC Vidéo Carousel",
  "tag": "section",
  "class": "ugc-video-carousel",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Titre de la section",
      "default": "Avis en vidéo"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Couleur du titre",
      "default": "#111111"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Taille du titre (px)",
      "default": 26,
      "min": 14,
      "max": 60,
      "step": 1
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Couleur de fond",
      "default": "#f4f7fc"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Marge supérieure",
      "default": 40,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Marge inférieure",
      "default": 40,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "thumbnail_width",
      "label": "Largeur des vidéos",
      "default": 220,
      "min": 100,
      "max": 300,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Afficher les flèches de navigation",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Vidéo",
      "settings": [
        {
          "type": "url",
          "id": "video_url",
          "label": "URL de la vidéo"
        },
        {
          "type": "image_picker",
          "id": "poster",
          "label": "Image de couverture"
        },
        {
          "type": "text",
          "id": "caption",
          "label": "Légende (facultatif)",
          "default": "Vidéo client"
        }
      ]
    }
  ],
  "max_blocks": 8,
  "presets": [
    {
      "name": "Carousel Vidéos UGC",
      "category": "Contenu"
    }
  ]
}
{% endschema %}